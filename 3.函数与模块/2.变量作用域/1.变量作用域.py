#/usr/bin/python3
#-*- coding:utf-8 -*-
'''变量作用域就是变量可访问范围，也可称为命名空间。在第一次给变量赋值时，
python创建变量。第一层次给变量赋值的位置决定了变量的作用域'''
'''一个程序通常包含了变量、函数和其他的各种语句，变量和函数设计可访问范围。
一个程序中的变量和函数要么是在当前文件中定义，要么就是python中预先定义好。
函数和程序文件划分了不同的作用域，在同一个作用域中，变量名是唯一的
在不同的作用域中，相同的变量名也表示了不同的变量'''
'''python作用域可以化为内置作用域、文件作用域、函数嵌套作用域、本地作用域
'''
'''
·本地作用域：不包含其他函数定义的函数的内部称为本地作用域，
函数内通过赋值创建的变量，函数参数都属于本地作用域
·函数嵌套作用域：包含了其他函数定义的函数内部被称为函数嵌套作用域
·文件作用域：程序文件（模块文件）的内部为文件作用域
·内置作用域：最顶层，包含了python各种预定义和函数的作用域称为内置作用域
内置作用和文件作用域有时候都被成做全局作用域，函数嵌套作用域有时也称作本地作用域
'''
'''根据作用域的范围，通常将变量名分为两种，全局变量和本地变量。内置作用域和文件作用域
中定义的变量和函数都属于全局变量，函数嵌套作用域和本地作用域内定义的变量和函数都属于本地变量
'''
#文件作用域
a= 10   #a是个全局变量
def add(x):     #参数x是函数add内本地变量
    c=x+a       #c是函数add内部的本地变量，a是函数外的全局变量
    return c
print(add(10))  #调用函数
'''程序运行过程中会产生a,b,c和add4个变量名，a和add属于文件作用域的全局变量
x和c是函数add内部的本地变量，还用到print这个内置函数'''

'''作用域外的变量与作用域内的变量名称相同时，遵循本地优先原则，此时外部作用域被屏蔽
---称为作用域隔离原理'''
a =10                       #赋值创建全局变量a
def show():
    a=100                   #赋值创建本地变量a
    print('in show():a=',a)
show()                      #从输出结果看，本地变量屏蔽了全局变量

# def fnc():
#     print('a=',a)
#     a = 100
#     print('in show():a=', a) #在函数fnc（）中先打印a的值，因为后面有赋值语句，python将函数内部的a
#都作为本地变量，所以在调用函数的时候出错，提示本地变量a使用之前没有赋值
