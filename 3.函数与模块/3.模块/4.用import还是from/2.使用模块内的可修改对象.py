#/usr/bin/python3
#-*- coding:utf-8 -*-
'''
使用from导入模块时，可以直接使用变量名引用模块中的对象，避免了输入“模块名”作为限定词，这个便利有时候也会遇到麻烦，
在线面的模块test3.py中变量x引用了一个不可修改的整数对象100，y引用了一个可修改的列表对象。
'''
x = 10                  #赋值，创建整对象100和变量x，使x引用整数对象
y = [1,2]               #赋值，创建引用列表对象[10,20]和变量y，使y引用列表对象
'''导入test3'''
from test3 import *     #使用当前模块变量引用模块中的整数对象100和列表对象[10,20]
print(x,y)              #输出结果显示为模块中的对象
x = 200                 #赋值使当前模块变量x引用整数对象200，断开与原来的引用
y[0] = 'abc'
import test3            #再次导入模块
print(test3.x,test3.y)  #输出结果显示模块中的列表对象被修改

'''
在执行“from test3 import *"时，隐含的复制操作改变了当前模块变量x和y的引用，使其引用了模块中的对象
执行x = 200 时，是当前模块变量x引用整数对象200，原来与模块中整数对象100的引用断开，所以赋值操作改变了变量的引用，并不会
改变变量引用的对象
执行y[0]='abc'时。并没有改变y的引用，而是修改了引用的列表对象。如果本意只是修改当前模块中的列表，
只是刚好遇到了与模块中引用的变量同名。显然目的并没有达到，这说明了在使用from导入模块时，应注意对可修改对象的引用。
如果无法确定，建议使用import
'''