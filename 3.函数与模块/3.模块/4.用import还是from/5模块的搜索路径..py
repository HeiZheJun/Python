#/usr/bin/python3
#-*- coding:utf-8 -*-
'''
在导入模块时，python会执行下列三个步骤
    （1）搜索模块文件：在导入模块时，省略了模块文件的路径和扩展名，因为python会按特定的路径来搜索模块文件
    （2）必要时编译模块：找到模块文件后，python会检查文件的时间戳，如果字节码文件比源代码文件旧（即源代码文件做了修改）
，python就会执行编译操作，生成最新的字节码文件。如果字节码文件是最新的，则跳过编译环节。如果再收缩路径中只发现了字节码，
而没有源代码文件，则直接加载字节码文件，如果只有源代码文件，python则直接执行编译操作，生成字节码文件
    （3）执行模块：执行模块的字节码文件。文件中所有的可执行语句都会被执行，所有的变量在第一次赋值时被创建，
函数对象也在执行def语句时创建，如果有输出也会直接显示
    在使用模块导入功能时，不能再import或from语句中指定块文件的路径。只能依赖于python搜索路径
    可使用sys模块的path属性来查看当前搜索路径的设置
'''
import sys
print(sys.path)
'''
    第一个字符串表示python当前的工作目录。python按着先后谁许一次在path列表中搜索模块。如果要导入的模块不在这些目录，
则操作失败
    通常，sys.path由四部分设置组成
    （1）程序当前目录
    （2）操作系统的环境变量PYTHONPATH中包含的目录
    （3）python标准库目录
    （4）任何.pth文件包含的目录
    python也会按着上面顺序搜索各个目录，从sys.path组成可以看出，可以使用系统环境变量PYTHONPATH或使用.pth文件来配置搜索路径
    .pth文件通常放在python的安装目录中，例如D:\python37，.pth文件的文件名可以任意，例如test.pth。.pth文件中，每个目录占一行
可包含多个目录。例如：
    C:\Apps
    D:\python
    sys.path列表在程序启动时，自动进行初始化。可以在代码中随意对sys.path列表进行添加或者删除操作。例如：
'''
from sys import path
print(path)             #当前的搜索路径
path.append('C:\\')
print(path)             #添加一条搜索路径
# del path[-1]
# print(path)             #删除一条搜索路径